ci sono tantissimi metodi

la cosa più semplice è utilizzare un servizio come netlify, oppure utilizzare un server ftp (esempio filezilla) 

Ci sono dei tools online che offrono sàziop DI hosting gratuito.

NETLIFY ci da un certo numero di banda e minuti di processore (build) che viene usato per creare il nostro sito, ma per i progetti personali sono pièu che sufficienti. 
Add new site: la più facile è deploy manually.

è ideali se abbiamo un sito puro (HTML, CSS JS), senza librerie. 

Solo che react ci pone un piccolo problema: primo viene effettuata una fase di build. 

BUILD: npm run build --> va a leggere tutti i dati dentro la mia cartella src, li converte perché c'è Babel dietro le quinte, che li converte in un js più vecchio per questioni di compatibilità dei vari browsers, ci dice quanto pesa il tutto e ci dice che à andato a buon fine.  (cartella dist)

nel file js ci sono anche le proprietà css. 
Index.html rimane relativaente vuoto.

quindi prendiamo questa cartella (build o dist) e la buttiamo in netlify.
cambiamo il nome, se vogliamo.. ed è già online, funzionante. 

Quindi Netlify è la cosa sicuramente più semplice. 

FILEZILLA 
è un programma gratuito. Sul lato sinisttro c'è il computer, sul lato destro posso creare una connessione con il server. mi connetto e trascino le cose nella cartella del server (online)

GITHUB
utillazndo dei repository possiamo andare a caricare i nostri progetti (il readme serve per mettere info sopra il progetto), e abbiamo un backup online e non solo.. possiamo andare su un servizio come netlity, o Vercel:

Vercel
posso importare un repository dal mio account GITHUB..
poi ci chiede delle cose tra cui eventuali environment varibles, che significa?
Vercel va a prendere le informazioni che abbiamo messo su GitHub dove non c'à la build, c'è solo il codice della src, quindi si crea un flusso di dati per cui quando io faccio un nuovo commit e il push, automaticamente triggeriamo la compilazione dell'app direttamente su vercel: Vercel si accorge che c'è un nuovo commit e fa lui in automatico la build e aggiorna il sito online. Siccome deve fare la build deve sapere quali sono le variabili ambientali. Le chiavi api dovrebbero rimanere private, di conseguenza avrei dovuto mettere il file da un'altra parte. Ma in vercel posso mettere la chiave mettendo il nome e il valore così ho una variabile di ambiente anche dentro a vercel. Quindi posso avere una chiave api online per il sito in produzioni e atre chiavi che utilizzo in locale. 
Quando clicco il deploy viene effettuato il deployment. Alla fine dirà che abbiamo aggiornato il nostro dominio. 

Questo flusso è detto anche continuous development è diventato lo standard delle aziende che fanno webapp e che richiedono una certa struttura lato server. 

GitHub utilizza vari branch. Quando vengono assegnati i task ai developers, si fa un branch nuovo con un id, e lo sviluppatore lavore su quel branch, in modo che poi farà il push su github del branch, poi ci sarà un team leader che controlla il branch, se il codice va bene farà un merge in main. A volte ci sono dei test automatizzati, altre volte è il team leader che controlla. Facendo il merge viene triggerata l'azione e di conseguenza l'hosting (Vercel, Amazon, Google Cloude Platform, etc...) si accorge del cambiamento e fa un nuovo deploy. In questo modo il sito è sempre onlie e aggiornato. 

